public interface ParserConstants
{
    int START_SYMBOL = 36;

    int FIRST_NON_TERMINAL    = 36;
    int FIRST_SEMANTIC_ACTION = 72;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1,  1,  1,  1,  1, -1, -1,  1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3,  2, -1, -1, -1, -1,  2,  2,  2,  2, -1, -1,  2, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  4, -1, -1, -1, -1,  4,  4,  4,  4, -1, -1,  4, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, 15, 15, 15, 15, -1, -1, 15, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, 19, 20, 20, 22, -1, -1, 18, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, 31, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, -1, -1, 25 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, 28 },
        { -1, -1, -1, 32, -1, -1, -1, -1, 32, 32, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, 32, 32, -1, -1, -1, -1, -1, -1, 32, 32, 32, 32 },
        { -1, -1, -1, 44, -1, -1, -1, -1, 44, 44, -1, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, 44, 44, -1, -1, -1, -1, -1, -1, 44, 44, 44, 44 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, 36, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, 42, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 72, 73, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67, 68, 69, 70 },
        { -1, 64, 64, -1, 64, 64, 64, 64, 64, 64, 65, 66, 64, 64, -1, -1, 64, -1, -1, -1, 64, -1, -1, -1, -1, 64, 64, 64, 64, -1, -1, 64, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 63, 63, -1, -1, -1, -1, -1, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 63, 63, 63 },
        { -1, 60, 60, -1, 60, 60, 60, 60, 61, 62, -1, -1, 60, 60, -1, -1, 60, -1, -1, -1, 60, -1, -1, -1, -1, 60, 60, 60, 60, -1, -1, 60, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 59, 59, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, 59, 59, 59 },
        { -1, -1, -1, -1, 55, 56, 57, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 53, 53, -1, 54, 54, 54, 54, -1, -1, -1, -1, 53, 53, -1, -1, 53, -1, -1, -1, 53, -1, -1, -1, -1, 53, 53, 53, 53, -1, -1, 53, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 52, 52, -1, -1, -1, -1, -1, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, 52, 52, 52 },
        { -1, -1, -1, 51, -1, -1, -1, -1, 48, 48, -1, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, 50, 49, -1, -1, -1, -1, -1, -1, 48, 48, 48, 48 },
        { -1, 46, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 45, -1, -1, -1, 45, -1, -1, -1, -1, 45, 45, 45, 45, -1, -1, 45, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  8, -1, -1, -1, -1,  6,  7,  7,  9, -1, -1,  5, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, 14, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, 16, 17, 17, -1, -1, 16, 16, 16, 16, 17, 17, 16, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        { 19, 37, 20 },
        { 39, 38 },
        { 37 },
        {  0 },
        { 66, 14 },
        { 42, 67 },
        { 44 },
        { 45 },
        { 46 },
        { 47 },
        { 15, 51 },
        {  0 },
        { 32, 68 },
        { 13, 42 },
        {  0 },
        { 41, 14, 69 },
        { 40 },
        {  0 },
        { 43 },
        { 44 },
        { 45 },
        { 46 },
        { 47 },
        { 42, 15, 51 },
        { 26, 16, 48, 17 },
        { 49, 32, 70 },
        { 13, 48 },
        {  0 },
        { 35, 13 },
        {  0 },
        { 27, 16, 50, 17 },
        { 28, 16, 50, 17 },
        { 51, 71 },
        { 13, 50 },
        {  0 },
        { 21, 51, 40, 52, 54, 20 },
        { 53, 52 },
        {  0 },
        { 22, 51, 40 },
        { 23, 40 },
        {  0 },
        { 29, 40, 55, 51 },
        { 31 },
        { 30 },
        { 64, 65 },
        {  0 },
        {  2, 64, 65 },
        {  3, 64, 65 },
        { 63 },
        { 25 },
        { 24 },
        {  4, 64 },
        { 60, 62 },
        {  0 },
        { 61, 60 },
        {  5 },
        {  6 },
        {  7 },
        {  8 },
        { 58, 59 },
        {  0 },
        {  9, 58, 59 },
        { 10, 58, 59 },
        { 56, 57 },
        {  0 },
        { 11, 56, 57 },
        { 12, 56, 57 },
        { 32 },
        { 33 },
        { 34 },
        { 35 },
        { 16, 51, 17 },
        {  9, 56 },
        { 10, 56 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Era esperado fim de programa",
        "Era esperado \"&&\"",
        "Era esperado \"||\"",
        "Era esperado \"!\"",
        "Era esperado \"==\"",
        "Era esperado \"!=\"",
        "Era esperado \"<\"",
        "Era esperado \">\"",
        "Era esperado \"+\"",
        "Era esperado \"-\"",
        "Era esperado \"*\"",
        "Era esperado \"/\"",
        "Era esperado \",\"",
        "Era esperado \";\"",
        "Era esperado \"=\"",
        "Era esperado \"(\"",
        "Era esperado \")\"",
        "Era esperado palavra",
        "Era esperado main",
        "Era esperado end",
        "Era esperado if",
        "Era esperado elif",
        "Era esperado else",
        "Era esperado false",
        "Era esperado true",
        "Era esperado read",
        "Era esperado write",
        "Era esperado writeln",
        "Era esperado repeat",
        "Era esperado until",
        "Era esperado while",
        "Era esperado identificador",
        "Era esperado int",
        "Era esperado float",
        "Era esperado string",
        "<main> inválido",
        "<lista_instrucoes> inválido",
        "<opc_lista_instrucoes> inválido",
        "<instrucao> inválido",
        "<lista_comando> inválido",
        "<comando> inválido",
        "<lista_id> inválido",
        "<atribuicao> inválido",
        "<entrada> inválido",
        "<saida> inválido",
        "<selecao> inválido",
        "<repeticao> inválido",
        "<lista_entrada> inválido",
        "<opcional_string> inválido",
        "<lista_exp> inválido",
        "<expressao> inválido",
        "<opcional_elif> inválido",
        "<elif> inválido",
        "<opcional_else> inválido",
        "<repeat_comando> inválido",
        "<fator> inválido",
        "<termo1> inválido",
        "<termo> inválido",
        "<aritmetica1> inválido",
        "<aritmetica> inválido",
        "<operador_relacional> inválido",
        "<relacional1> inválido",
        "<relacional> inválido",
        "<elemento> inválido",
        "<expressao1> inválido",
        "<opc_instrucao> inválido",
        "<opc_atribuicao> inválido",
        "<opc_lista_id> inválido",
        "<opc_lista_comando> inválido",
        "<opc_lista_entrada> inválido",
        "<opc_lista_exp> inválido"
    };
}
